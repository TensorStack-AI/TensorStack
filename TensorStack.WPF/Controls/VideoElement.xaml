<CommonControls:BaseControl x:Class="TensorStack.WPF.Controls.VideoElement"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:CommonControls="clr-namespace:TensorStack.WPF.Controls"
             xmlns:CommonConverters="clr-namespace:TensorStack.WPF.Converters"
             x:Name="VideoElementUI" 
             Focusable="True"
             HorizontalContentAlignment="Center" 
             VerticalContentAlignment="Center">
    <CommonControls:BaseControl.InputBindings>
        <KeyBinding Modifiers="Ctrl" Key="O" Command="{Binding LoadSourceCommand , ElementName=VideoElementUI}" />
        <KeyBinding Modifiers="Ctrl" Key="C"  Command="{Binding CopyOverlayCommand, ElementName=VideoElementUI}" />
        <KeyBinding Modifiers="Ctrl" Key="S" Command="{Binding SaveSourceCommand, ElementName=VideoElementUI}" />
        <KeyBinding Modifiers="Ctrl" Key="V"  Command="{Binding PasteSourceCommand, ElementName=VideoElementUI}" />
        <KeyBinding Modifiers="Ctrl" Key="Z"  Command="{Binding ClearCommand, ElementName=VideoElementUI}" />
        <KeyBinding Modifiers="Ctrl" Key="F" Command="{Binding LoadOverlayCommand , ElementName=VideoElementUI}" />
        <KeyBinding Modifiers="Ctrl" Key="G"  Command="{Binding CopyOverlayCommand, ElementName=VideoElementUI}" />
        <KeyBinding Modifiers="Ctrl" Key="H" Command="{Binding SaveOverlayCommand, ElementName=VideoElementUI}" />
    </CommonControls:BaseControl.InputBindings>
    <Border DataContext="{Binding ElementName=VideoElementUI}" BorderBrush="{StaticResource ButtonBorderBrush}" Background="{StaticResource ContainerBackground}" BorderThickness="1"  >
        <DockPanel >

            <!--Controls-->
            <DockPanel DockPanel.Dock="Bottom" Visibility="{Binding IsToolbarEnabled, Converter={StaticResource BooleanToVisibilityConverter}}" Margin="-1,0,-1,-1" Height="60">

                <!--Progress-->
                <ProgressBar  DockPanel.Dock="Top"
                   Height="10"
                   Margin="1"
                   Value="{Binding ProgressValue, Mode=OneWay}" 
                   Maximum="{Binding ProgressMax, Mode=OneWay}" >
                    <ProgressBar.Style>
                        <Style TargetType="{x:Type ProgressBar}" BasedOn="{StaticResource {x:Type ProgressBar}}">
                            <Setter Property="IsIndeterminate" Value="False"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ProgressValue, ElementName=VideoElementUI}" Value="-1">
                                    <Setter Property="IsIndeterminate" Value="True"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ProgressBar.Style>
                </ProgressBar>

                <!--Clear-->
                <Grid DockPanel.Dock="Right">
                    <Button Command="{Binding ClearCommand}" Width="50">
                        <CommonControls:FontAwesome Icon="&#xf2ed;" />
                    </Button>
                </Grid>

                <!--Video Info-->
                <Grid DockPanel.Dock="Right"  >
                    <StackPanel Margin="0,0,10,0" VerticalAlignment="Center">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                            <TextBlock Text="{Binding Source.Frames, FallbackValue=0}" />
                            <TextBlock Text=" frames" Opacity=".7" VerticalAlignment="Center" FontStyle="Italic" FontSize="11"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                            <TextBlock Text="{Binding ProgressPosition, FallbackValue=00:00:00, StringFormat={}mm\\:ss\\.ff}" />
                            <TextBlock Text=" / " Opacity=".7" VerticalAlignment="Center" FontStyle="Italic"/>
                            <TextBlock Text="{Binding Source.Duration, FallbackValue=00:00:00, StringFormat={}mm\\:ss\\.ff}" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="0,-2,0,0" HorizontalAlignment="Right">
                            <TextBlock Text="{Binding Source.Width, FallbackValue=0}" />
                            <TextBlock Text=" x " Opacity=".7" VerticalAlignment="Center" FontStyle="Italic"/>
                            <TextBlock Text="{Binding Source.Height, FallbackValue=0}" />
                            <TextBlock Text=" @ " FontSize="11" Opacity=".7" VerticalAlignment="Center" FontStyle="Italic"/>
                            <TextBlock Text="{Binding Source.FrameRate, StringFormat={}{0:F2}, FallbackValue=0}" />
                            <TextBlock Text=" fps" FontSize="11" Opacity=".7" VerticalAlignment="Center" FontStyle="Italic"/>
                        </StackPanel>


                    </StackPanel>
                </Grid>

                <!--Buttons-->
                <UniformGrid Columns="5">
                    <Button Command="{Binding LoadSourceCommand}" Visibility="{Binding IsLoadEnabled, Converter={StaticResource BooleanToVisibilityConverter}}" >
                        <CommonControls:FontAwesome Icon="&#xf0ee;" />
                    </Button>
                    <Button Command="{Binding SaveSourceCommand}" Visibility="{Binding IsSaveEnabled, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <CommonControls:FontAwesome Icon="&#xf0c7;" />
                    </Button>
                    <Grid>
                        <Button Command="{Binding PlayCommand}" >
                            <CommonControls:FontAwesome Icon="&#xf04b;" Visibility="{Binding MediaState, Converter={StaticResource InverseEnumToVisibilityConverter}, ConverterParameter=Play}"/>
                        </Button>
                        <Button Command="{Binding PauseCommand}" Visibility="{Binding MediaState, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter=Play}">
                            <CommonControls:FontAwesome Icon="&#xf04c;" />
                        </Button>
                    </Grid>
                    <Button Command="{Binding StopCommand}">
                        <CommonControls:FontAwesome Icon="&#xf04d;" />
                    </Button>
                </UniformGrid>

            </DockPanel>

            <!--Main Content-->
            <Grid>

                <!--Video-->
                <Grid x:Name="SourceContainer" >
                    <!--PlaceHolder-->
                    <Image Source="{StaticResource ImageTensorstackCubeG}" Visibility="{Binding Source, Converter={StaticResource InverseNullVisibilityConverter}}" Stretch="Uniform" Opacity="0.2" Margin="90"/>

                    <!--Source-->
                    <MediaElement x:Name="VideoControl"
                        Source="{Binding FileSource}" 
                        Volume="0"
                        Stretch="Uniform" 
                        LoadedBehavior="Manual" 
                        UnloadedBehavior="Close" 
                        ScrubbingEnabled="True" 
                        Loaded="VideoControl_Loaded"
                        MediaOpened="VideoControl_MediaOpened"
                        MediaEnded="VideoControl_MediaEnded"
                        MouseLeftButtonDown="VideoControl_MouseDown" />

                    <!--Overlay-->
                    <MediaElement x:Name="VideoOverlayControl" 
                        Source="{Binding FileOverlaySource}" 
                        Volume="0"
                        Stretch="Uniform"
                        LoadedBehavior="Manual" 
                        UnloadedBehavior="Close" 
                        ScrubbingEnabled="True"
                        MouseLeftButtonDown="VideoControl_MouseDown">
                        <MediaElement.Clip>
                            <RectangleGeometry Rect="0,0,0,0" />
                        </MediaElement.Clip>
                    </MediaElement>
                </Grid>


                <!--Splitter-->
                <Grid x:Name="GridSplitterContainer" MaxWidth="{Binding ActualWidth, ElementName=SourceContainer}"
                    ClipToBounds="True" 
                    Visibility="Hidden">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition x:Name="GridSplitterColumn" MaxWidth="{Binding ActualWidth, ElementName=SourceContainer}"/>
                        <ColumnDefinition Width="30" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid x:Name="GridSplitterControl" Grid.Column="0" SizeChanged="GridSplitter_SizeChanged" />
                    <GridSplitter Grid.Column="1"  Margin="-15,0,15,0"  Width="30" HorizontalAlignment="Stretch" Background="Transparent" Cursor="ScrollWE" Style="{x:Null}" />
                    <Border Grid.Column="1" Margin="-15,0,15,0" BorderBrush="White" BorderThickness="1,0,1,0" Width="1" Opacity=".4" IsHitTestVisible="False" HorizontalAlignment="Center"  />
                    <Grid Grid.Column="1" Margin="-15,0,15,0"  HorizontalAlignment="Center" VerticalAlignment="Center" ClipToBounds="False" Opacity="1" IsHitTestVisible="False" >
                        <TextBlock Text="&lt; &gt;" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,3" Foreground="White" Opacity=".8" FontWeight="Bold" FontSize="16"  />
                        <Ellipse  Width="30" Height="30" Stroke="White" Fill="White" Opacity=".8"  StrokeThickness="2" />
                    </Grid>
                </Grid>


                <Grid.ContextMenu>
                    <ContextMenu>
                        <!--Source-->
                        <MenuItem Header="Load" InputGestureText="Ctrl+O" Command="{Binding LoadSourceCommand}" IsEnabled="{Binding IsLoadEnabled}">
                            <MenuItem.Icon>
                                <CommonControls:FontAwesome Icon="&#xf07c;" IconStyle="Light" Size="15" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Copy" InputGestureText="Ctrl+C" Command="{Binding CopySourceCommand}" IsEnabled="{Binding Source, Converter={StaticResource InverseNullBooleanConverter}}" >
                            <MenuItem.Icon>
                                <CommonControls:FontAwesome Icon="&#xf0c5;" IconStyle="Light" Size="15" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Paste" InputGestureText="Ctrl+V" Command="{Binding PasteSourceCommand}" IsEnabled="{Binding IsLoadEnabled}" >
                            <MenuItem.Icon>
                                <CommonControls:FontAwesome Icon="&#xf0ea;" IconStyle="Light" Size="15"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Save" InputGestureText="Ctrl+S" Command="{Binding SaveSourceCommand}" IsEnabled="{Binding Source, Converter={StaticResource InverseNullBooleanConverter}}" >
                            <MenuItem.Icon>
                                <CommonControls:FontAwesome Icon="&#xf0c7;" IconStyle="Light" Size="15"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Clear" InputGestureText="Ctrl+Z" Command="{Binding ClearCommand}" IsEnabled="{Binding Source, Converter={StaticResource InverseNullBooleanConverter}}" >
                            <MenuItem.Icon>
                                <CommonControls:FontAwesome Icon="&#xf2ed;" IconStyle="Light" Size="15"/>
                            </MenuItem.Icon>
                        </MenuItem>

                        <!--Overlay-->
                        <Separator Margin="0,3" Opacity=".3"/>
                        <MenuItem Header="Load Overlay" InputGestureText="Ctrl+F" Command="{Binding LoadOverlayCommand}" IsEnabled="{Binding IsLoadOverlayEnabled}">
                            <MenuItem.Icon>
                                <CommonControls:FontAwesome Icon="&#xf07c;" IconStyle="Light" Size="15" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Copy Overlay" InputGestureText="Ctrl+G" Command="{Binding CopyOverlayCommand}" IsEnabled="{Binding OverlaySource, Converter={StaticResource InverseNullBooleanConverter}}" >
                            <MenuItem.Icon>
                                <CommonControls:FontAwesome Icon="&#xf0c5;" IconStyle="Light" Size="15"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Save Overlay" InputGestureText="Ctrl+H" Command="{Binding SaveOverlayCommand}" IsEnabled="{Binding OverlaySource, Converter={StaticResource InverseNullBooleanConverter}}" >
                            <MenuItem.Icon>
                                <CommonControls:FontAwesome Icon="&#xf0c7;" IconStyle="Light" Size="15"/>
                            </MenuItem.Icon>
                        </MenuItem>

                    </ContextMenu>
                </Grid.ContextMenu>
            </Grid>

        </DockPanel>
    </Border>

</CommonControls:BaseControl>
